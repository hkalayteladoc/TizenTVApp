/**
 * Teladoc Helath Inc. Copyright (c) 2023. All rights reserved.
 */

/*
class httpComm()
{
	var message;
};

*/


function StartPostPoll()
{
	console.log(stopPostPoll);
	while(!stopPostPoll)
	{
		//console.log(stopPostPoll);
		setTimeout(httpComm(), 5000);
	}
}



function reqListener(e)
{
	
	console.log("type: " + e.type + "   Loaded: " + e.loaded);
	console.log("status: " + this.status);
	console.log("response: " + this.response);
	console.log("responseurl: " + this.responseURL);
	console.log("Text: " + this.responseText);
	console.log("all headers: " + this.getAllResponseHeaders());
}


async function httpComm()
{
	/*
	const req = new XMLHttpRequest();
	
	req.addEventListener("load", reqListener);
	req.addEventListener("progress", reqListener);
	req.addEventListener("error", reqListener);
	req.addEventListener("abort", reqListener);	
	
	req.addEventListener("loadstart", reqListener);
	req.addEventListener("loadend", reqListener);
	
	req.open("GET", "http://www.somethinexample.crap");
	req.setRequestHeader('Content-Type', 'application/json');
	req.send();
	
	
	
		var serverBaseURL = "http://" + serverAddress + ":" + serverPort;
		const response = await fetch(serverBaseURL + "/change", 
				{
					method:"post",
					headers:{ "Content-Type": "application/json"},
					body: JSON.stringify(""),
				});
		const jsonData = await response;
		console.log(jsonData);
		
		if(jsonData.status === 404)
		{
			console.log("it's ok to ignore and keep polling");
		}
	
	
	*/
	
	try
	{
		var serverBaseURL = "http://" + serverAddress + ":" + serverPort;
		console.log(serverBaseURL);
		
		/*
		const response = fetch(serverBaseURL + "/change", 
				{
					method:"get",
					headers:{ "Content-Type": "application/json"},
				});
		const responseDataObj = await response;
		responseData = responseDataObj.text();
		console.log(responseData);
		console.log(responseData.body);
		changeData = JSON.parse(responseData.body);
		console.log(changeData);
		*/

		const response = await fetch(serverBaseURL + "/change", 
				{
					method:"get",
					headers:{ "Content-Type": "application/json"},
				});
		
		const responseData = await response.json();
		//responseData = responseDataObj.text();
		console.log(responseData);
		//console.log(responseData.body);
		//changeData = JSON.parse(responseData.body);
		//console.log(changeData);
	
		
		if(responseData.status === 404)
		{
			console.log("it's ok to ignore and keep polling");
		}
	}
	catch(e)
	{
		console.log(e);	
	}
}


